name: Deploy to EC2

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Git Commit Hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ env.COMMIT_HASH }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ env.COMMIT_HASH }}

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.COMMIT_HASH }} ./frontEnd
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ env.COMMIT_HASH }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Transfer Docker Compose file to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${EC2_KEY}" > key.pem
          chmod 400 key.pem
          scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yml ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/

      - name: Deploy on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          COMMIT_HASH: ${{ env.COMMIT_HASH }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            echo "DOCKER_USERNAME: ${DOCKER_USERNAME}"
            echo "COMMIT_HASH: ${COMMIT_HASH}"
            
            # Install Docker if not already installed
            if ! command -v docker &> /dev/null
            then
                sudo yum update -y
                sudo amazon-linux-extras install docker -y
                sudo service docker start
                sudo usermod -a -G docker ec2-user
                sudo systemctl enable docker
            fi

            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null
            then
                sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi

            export DB_URL=${DB_URL}
            export DB_USERNAME=${DB_USERNAME}
            export DB_PASSWORD=${DB_PASSWORD}
            export DOCKER_USERNAME=${DOCKER_USERNAME}
            export COMMIT_HASH=${COMMIT_HASH}
            docker-compose down
            docker-compose pull
            docker-compose up -d
          EOF
        shell: /usr/bin/bash -e {0}
